#!/usr/bin/env python
import argparse
import os
import shutil
from lib.validation import validate_dir


def find_files_recursively(dir):
    '''
    指定されたパスに対して、その内部にあるファイルを再帰的に返す
    '''
    for root, dirs, files in os.walk(dir):
        for file in files:
            yield os.path.join(root, file)


def mv_one_level(src, dest):
    exists_files = []

    for filepath in find_files_recursively(src):
        filename = os.path.basename(filepath)
        if os.path.exists(os.path.join(dest, filename)):
            exists_files.append(filepath)
            continue

        shutil.move(filepath, dest)

        message = '{0} ===> {1}'.format(filepath, os.path.join(dest, os.path.basename(filepath)))
        print(message)

    print('Already exists files shown below\n')
    print('\n'.join(exists_files))


if __name__ == '__main__':
    '''
    srcで指定されたディレクトリから再帰的にファイルを見つけ,
    それらをdestに指定されたディレクトリにmvする.
    (複雑なディレクトリ構造を持つ状態から1階層にする)
    '''
    parser = argparse.ArgumentParser(description='move files to one level in target directory recursively')
    parser.add_argument('src', type=str, help='source directory path')
    parser.add_argument('dest', type=str, help='destination directory path')
    args = parser.parse_args()

    if not validate_dir(args.src):
        raise Exception('"src" is not valid directory')
    if not validate_dir(args.dest):
        raise Exception('"dest" is not valid directory')

    mv_one_level(args.src, args.dest)
